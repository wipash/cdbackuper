apiVersion: v1
kind: Namespace
metadata:
  name: cd-import
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: cd-archive-pv
spec:
  capacity:
    storage: 1Ti
  accessModes: [ ReadWriteMany ]
  persistentVolumeReclaimPolicy: Retain
  storageClassName: ""
  nfs:
    server: 172.20.0.1
    path: /volume1/Backup/Maurice/cd-archive
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cd-archive-pvc
  namespace: cd-import
spec:
  accessModes: [ ReadWriteMany ]
  storageClassName: ""
  resources:
    requests:
      storage: 1Ti
  volumeName: cd-archive-pv
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cd-watcher
  namespace: cd-import
data:
  cd-importer.sh: |
@@SCRIPT_PLACEHOLDER@@
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cd-importer
  namespace: cd-import
spec:
  selector:
    matchLabels: { app: cd-importer }
  template:
    metadata:
      labels: { app: cd-importer }
    spec:
      serviceAccountName: default
      hostPID: true
      hostIPC: true
      # Set fsGroup to match NFS server's gid for proper permissions
      securityContext:
        fsGroup: 65537
        fsGroupChangePolicy: "OnRootMismatch"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: NotIn
                values:
                - hp1  # Don't schedule on hp1, has some issue with its cd drive

      containers:
      - name: watcher
        image: ghcr.io/wipash/cdbackuper:latest@sha256:917c9074daba1fed3bcdc0f90a351dd0c7c60309da1eca4281ccdcad295d4e83
        imagePullPolicy: Always
        securityContext:
          privileged: true
          allowPrivilegeEscalation: true
          runAsGroup: 65537
          capabilities:
            add: ["SYS_ADMIN","SYS_RAWIO"]
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef: { fieldPath: spec.nodeName }
          - name: DATA_ROOT
            value: /data
          - name: RETRIES
            value: "2"
          - name: EXTRACT_FILES
            value: "true"
          - name: DELETE_ISO_ON_SUCCESS
            value: "true"
          - name: TIMEOUT
            value: "7200"
          - name: POLL_SECS
            value: "5"
          - name: DISCORD_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                name: cd-archiver-config
                key: discord-webhook-url
                optional: true  # Won't fail if secret doesn't exist
        command: ["/usr/local/bin/cd-importer.sh"]
        volumeMounts:
          - name: host-dev
            mountPath: /dev
          - name: host-sys
            mountPath: /sys
            readOnly: true
          - name: udev-run
            mountPath: /run/udev
            readOnly: true
          - name: script
            mountPath: /usr/local/bin/cd-importer.sh
            subPath: cd-importer.sh
          - name: cd-archive
            mountPath: /data
      volumes:
        - name: host-dev
          hostPath: { path: /dev }
        - name: host-sys
          hostPath: { path: /sys }
        - name: udev-run
          hostPath: { path: /run/udev }
        - name: script
          configMap:
            name: cd-watcher
            defaultMode: 0755
        - name: cd-archive
          persistentVolumeClaim:
            claimName: cd-archive-pvc
      tolerations:
        - operator: "Exists"    # schedule everywhere
